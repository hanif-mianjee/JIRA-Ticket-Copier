# üîß Plan for the Extension
We are building a Chrome extension that integrates with JIRA web pages. It should:
1. Detect when a user is on a JIRA ticket page.
2. Extract the ticket ID, title, and status from the DOM.
3. Provide a simple UI element (e.g., button or context menu) to copy that data to clipboard in the following format:
   AB-1234: In Progress - Sample ticket title here
4. Package and prepare the extension for Chrome Web Store submission.

# üìã Requirements
- Works with JIRA cloud interface (URL pattern: https://*.atlassian.net/browse/*)
- Button appears intuitively on the JIRA ticket page
- Clicking the button copies a string formatted like: AB-1234: In Progress - Sample title
- Must use clean JavaScript/TypeScript, HTML, and manifest v3
- Styling should blend with JIRA UI
- Modular, well-documented code
- Include unit tests for utility functions (e.g., DOM extraction, format generation)
- Provide a dev/test environment setup guide
- Prepare ZIP for Chrome Web Store upload

# ‚úÖ Current State of Development
## Progress Update (July 18, 2025)
- All automation steps (build, lint, test, versioning, manifest validation, packaging, CI) are implemented and tested.
- Developer checklist and packaging instructions updated for robust release workflow.
- CI workflow runs on every push/PR and produces distributable ZIP.
- Extension is ready for Chrome Web Store submission after all checks pass.

## Milestones
- ‚úÖ UI polish for git button: border radius, height, icon size, margin, padding, font size, and feedback text spacing
- ‚úÖ Initial extension scaffold and manifest v3 setup
- ‚úÖ DOM selectors for JIRA ticket info extraction
- ‚úÖ Button injection and styling to match JIRA UI
- ‚úÖ MutationObserver for SPA navigation support
- ‚úÖ Unit tests for utility functions (Jest, jsdom)
- ‚úÖ Icon branding and packaging instructions
- ‚úÖ Dropdown for status selection (grouped UI, copy on select)
- ‚úÖ Accessibility and error handling improvements
- ‚úÖ Final packaging, ZIP cleanup, and Chrome Web Store submission (July 18, 2025)
  - Packaged as `jira-ticket-copier.zip` (test files and .DS_Store removed)
  - Ready for upload to Chrome Web Store
- ‚úÖ Add one more button after dropdown (git button for commit message)
- ‚úÖ On click git button, ticketId and title are copied to clipboard in format: "ticketId: title"
- ‚úÖ Format copied text: "ticketId: title"
- ‚úÖ Styling matches JIRA UI, dropdown rounded corners, gray background, white git icon
## Progress Update (July 23, 2025)
- Git button UI now matches dropdown/button: 3px border radius, 25px height, 5px margin, 0 3px padding, 14px font, white color, and feedback text with 10px horizontal padding.
- All feedback and visual issues addressed per user review.
- Added a new "git" button after the status dropdown in the ticket copier UI group.
- On click, the git button copies the ticketId and title in the format: "ticketId: title" to clipboard (no status).
- Button uses a white inline SVG git icon, gray background, rounded corners, and matches JIRA UI styling.
- Button provides feedback for success, error, and missing info.
- All code changes are in `src/content.js` (UI logic) and use existing utility functions.
- No changes to packaging or manifest required for this feature.
- ‚è≥ Add options_page or options_ui:
   - add user-configurable settings (e.g., custom commit format).
- ‚è≥ Post-submission feedback and next feature planning

## Packaging Steps (July 18, 2025)

1. Run all checks: lint, test, validate manifest, build, release.
2. Review extension in Chrome locally for UI/UX and functionality.
3. Run packaging step to create distributable ZIP.
4. Upload ZIP to Chrome Web Store.

## Automated GitHub Release Workflow (July 18, 2025)

1. After running `npm run release`, push your changes and tags:
   ```sh
   git push --follow-tags
   ```
2. The `.github/workflows/release.yml` workflow will automatically create a GitHub Release and upload the distributable ZIP as a release asset when a new tag is pushed.
3. You can also draft a release manually on GitHub if needed, but automation is now the default.

## Notes for Next Developer/Agent

- Do not use or add Prettier/formatting steps; only ESLint is enforced.
- Always check the README for the latest workflow and release instructions.

## What‚Äôs Next (TODO)
7. Review and update unit tests for git button and feedback UI.
8. Update README screenshots and usage instructions for new UI.
9. Monitor for further UI/UX feedback after release.
## What‚Äôs Next (TODO)
1. Review UI/UX for the new git button on different JIRA ticket layouts and browsers.
2. Add unit tests for the new copy-to-clipboard logic (if not already covered).
3. Consider making the git button icon configurable (SVG or PNG).
4. Gather user feedback after Chrome Web Store submission.
5. Plan for next features: context menu support, options page, localization, or other user requests.
6. Update documentation and screenshots as needed.

1. After submission, record reviewer feedback and any required changes in this file.
2. Note any bugs or user suggestions from initial usage.
3. Plan next improvements (e.g., context menu support, options page, localization).
4. Update this file with feedback and a new TODO list for the next agent/developer.

# üîÅ Reusable Prompt for AI Agent Continuation
You are continuing the development of a Chrome extension based on the plan in this file. Your tasks are:
1. Read all instructions and understand the current state.
2. Build the required components based on priority.
3. After completing a step, update the "Current State of Development" section with details.
4. Always document new files, code functions, and design decisions.
5. Ensure all required features are working and tested.
6. If you finish a major milestone, repackage the extension and update instructions for the next milestone.
7. You may use your own judgment and creativity to improve UX or code quality if the results remain aligned with the goals.
8. After each round of work, append a new section in this file titled "What‚Äôs Next" with a TODO list for the next agent/developer.

